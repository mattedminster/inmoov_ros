// Auto-generated. Do not edit!

// (in-package cob_people_detection.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class deleteDataGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.delete_mode = null;
      this.delete_index = null;
      this.label = null;
    }
    else {
      if (initObj.hasOwnProperty('delete_mode')) {
        this.delete_mode = initObj.delete_mode
      }
      else {
        this.delete_mode = 0;
      }
      if (initObj.hasOwnProperty('delete_index')) {
        this.delete_index = initObj.delete_index
      }
      else {
        this.delete_index = 0;
      }
      if (initObj.hasOwnProperty('label')) {
        this.label = initObj.label
      }
      else {
        this.label = '';
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type deleteDataGoal
    // Serialize message field [delete_mode]
    bufferOffset = _serializer.int32(obj.delete_mode, buffer, bufferOffset);
    // Serialize message field [delete_index]
    bufferOffset = _serializer.int32(obj.delete_index, buffer, bufferOffset);
    // Serialize message field [label]
    bufferOffset = _serializer.string(obj.label, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type deleteDataGoal
    let len;
    let data = new deleteDataGoal(null);
    // Deserialize message field [delete_mode]
    data.delete_mode = _deserializer.int32(buffer, bufferOffset);
    // Deserialize message field [delete_index]
    data.delete_index = _deserializer.int32(buffer, bufferOffset);
    // Deserialize message field [label]
    data.label = _deserializer.string(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += object.label.length;
    return length + 12;
  }

  static datatype() {
    // Returns string type for a message object
    return 'cob_people_detection/deleteDataGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '699fefe29c3cb75fdf58d155b2fb38f5';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    # Deletes specific data in the training database
    #
    # goal message
    int32 delete_mode			# delete database entries in one of the following ways: 1=one entry given the delete_index, 2=all entries labeled with label
    int32 delete_index			# the database entry with this index number shall be deleted
    string label				# all database entries carrying this label are to be deleted
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new deleteDataGoal(null);
    if (msg.delete_mode !== undefined) {
      resolved.delete_mode = msg.delete_mode;
    }
    else {
      resolved.delete_mode = 0
    }

    if (msg.delete_index !== undefined) {
      resolved.delete_index = msg.delete_index;
    }
    else {
      resolved.delete_index = 0
    }

    if (msg.label !== undefined) {
      resolved.label = msg.label;
    }
    else {
      resolved.label = ''
    }

    return resolved;
    }
};

module.exports = deleteDataGoal;
