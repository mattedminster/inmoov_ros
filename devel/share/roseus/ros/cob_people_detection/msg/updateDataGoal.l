;; Auto-generated. Do not edit!


(when (boundp 'cob_people_detection::updateDataGoal)
  (if (not (find-package "COB_PEOPLE_DETECTION"))
    (make-package "COB_PEOPLE_DETECTION"))
  (shadow 'updateDataGoal (find-package "COB_PEOPLE_DETECTION")))
(unless (find-package "COB_PEOPLE_DETECTION::UPDATEDATAGOAL")
  (make-package "COB_PEOPLE_DETECTION::UPDATEDATAGOAL"))

(in-package "ROS")
;;//! \htmlinclude updateDataGoal.msg.html


(defclass cob_people_detection::updateDataGoal
  :super ros::object
  :slots (_update_mode _update_index _old_label _new_label ))

(defmethod cob_people_detection::updateDataGoal
  (:init
   (&key
    ((:update_mode __update_mode) 0)
    ((:update_index __update_index) 0)
    ((:old_label __old_label) "")
    ((:new_label __new_label) "")
    )
   (send-super :init)
   (setq _update_mode (round __update_mode))
   (setq _update_index (round __update_index))
   (setq _old_label (string __old_label))
   (setq _new_label (string __new_label))
   self)
  (:update_mode
   (&optional __update_mode)
   (if __update_mode (setq _update_mode __update_mode)) _update_mode)
  (:update_index
   (&optional __update_index)
   (if __update_index (setq _update_index __update_index)) _update_index)
  (:old_label
   (&optional __old_label)
   (if __old_label (setq _old_label __old_label)) _old_label)
  (:new_label
   (&optional __new_label)
   (if __new_label (setq _new_label __new_label)) _new_label)
  (:serialization-length
   ()
   (+
    ;; int32 _update_mode
    4
    ;; int32 _update_index
    4
    ;; string _old_label
    4 (length _old_label)
    ;; string _new_label
    4 (length _new_label)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _update_mode
       (write-long _update_mode s)
     ;; int32 _update_index
       (write-long _update_index s)
     ;; string _old_label
       (write-long (length _old_label) s) (princ _old_label s)
     ;; string _new_label
       (write-long (length _new_label) s) (princ _new_label s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _update_mode
     (setq _update_mode (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; int32 _update_index
     (setq _update_index (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; string _old_label
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _old_label (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; string _new_label
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _new_label (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;;
   self)
  )

(setf (get cob_people_detection::updateDataGoal :md5sum-) "d34a17444815de8f9d0fe51faa3bd9da")
(setf (get cob_people_detection::updateDataGoal :datatype-) "cob_people_detection/updateDataGoal")
(setf (get cob_people_detection::updateDataGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Updates data in the training database
#
# goal message
int32 update_mode			# update the label with new_label either for 1=one image given the update_index, 2=all entries labeled with old_label
int32 update_index			# the database entry with this index number shall be updated with a new label
string old_label			# all database entries carrying this label are to be updated with new_label
string new_label			# the new label that is supposed to replace the old one

")



(provide :cob_people_detection/updateDataGoal "d34a17444815de8f9d0fe51faa3bd9da")


